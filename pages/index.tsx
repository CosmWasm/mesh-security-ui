import { useEffect, useState, useMemo } from 'react';
import { useWallet } from '@cosmos-kit/react';
import { assets } from 'chain-registry';
import { AssetList, Asset } from '@chain-registry/types';

import {
  Box,
  Divider,
  Grid,
  Heading,
  Text,
  Stack,
  Container,
  Link,
  Button,
  Flex,
  Icon,
  useColorMode,
  useColorModeValue
} from '@chakra-ui/react';
import { BsFillMoonStarsFill, BsFillSunFill } from 'react-icons/bs';
import { dependencies, products } from '../config';

import { WalletStatus } from '@cosmos-kit/core';
import { Product, Dependency, WalletSection } from '../components';
import Head from 'next/head';
import { SigningCosmWasmClient } from '@cosmjs/cosmwasm-stargate';
import { Coin } from "cosmwasm";

export default function Home() {
  const { colorMode, toggleColorMode } = useColorMode();
  const color = useColorModeValue('primary.500', 'primary.200');

  // const {
  //   getStargateClient,
  //   getCosmWasmClient,
  //   address,
  //   setCurrentChain,
  //   currentWallet,
  //   walletStatus
  // } = useWallet();

  // useEffect(() => {
  //   setCurrentChain(chainName);
  // }, [chainName]);

  // const color = useColorModeValue('primary.500', 'primary.200');

  // // get cw20 balance
  // const [client, setClient] = useState<SigningCosmWasmClient | null>(
  //   null
  // );

  // useEffect(() => {
  //   getCosmWasmClient().then((cosmwasmClient) => {
  //     if (!cosmwasmClient || !address) {
  //       console.error('stargateClient undefined or address undefined.');
  //       return;
  //     }
  //     setClient(cosmwasmClient);
  //   });
  // }, [address, getCosmWasmClient]);
  // const [bal, setBal] = useState<Coin | null>(null);
  // useEffect(() => {
  //   if (client && address) {
  //     client
  //       .getBalance(address, denom)
  //       .then((b) => setBal(b));
  //   }
  // }, [client, address]);

  return (
    <Container maxW="5xl" py={10}>
      <Head>
        <title>Mesh Security Testnet</title>
        <meta name="description" content="Generated by create cosmos app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex justifyContent="end" mb={4}>
        <Button variant="outline" px={0} onClick={toggleColorMode}>
          <Icon
            as={colorMode === 'light' ? BsFillMoonStarsFill : BsFillSunFill}
          />
        </Button>
      </Flex>
      <Box textAlign="center">
        <Heading
          as="h1"
          fontSize={{ base: '3xl', sm: '4xl', md: '5xl' }}
          fontWeight="extrabold"
          mb={3}
        >
          Mesh Security
        </Heading>
        <Heading
          as="h1"
          fontWeight="bold"
          fontSize={{ base: '2xl', sm: '3xl', md: '4xl' }}
        >
          <Text as="span">Live On&nbsp;</Text>
          <Text as="span" color={color}>
            Juno uni-5 + Osmosis osmo-test-4
          </Text>
        </Heading>
      </Box>

      <Box mb={3}>
        <Divider />
      </Box>

      <Grid templateColumns={{ md: '1fr 1fr' }} gap={8} mb={20}>
        <Product title="Osmosis Provider" text="Provider cross chain security from Osmosis" href="/provider" />
        <Product title="Juno Consumer" text="Receive cross chain security on Juno" href="/consumer" />
      </Grid>

      <Box mb={3}>
        <Divider />
      </Box>
      
      <Stack
        isInline={true}
        spacing={1}
        justifyContent="center"
        opacity={0.5}
        fontSize="sm"
      >
        <Text>Built with</Text>
        <Link
          href="https://cosmology.tech/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Cosmology
        </Link>
      </Stack>
    </Container>
  );
}
